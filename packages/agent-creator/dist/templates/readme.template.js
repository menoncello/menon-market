/**
 * README template for agent directories
 */
function generateReadmeHeader() {
    return `# {{agentType}}

{{agentName}} - AI Agent for Claude Code

## Description

{{description}}

## Specializations

{{#each specializations}}
- {{this}}
{{/each}}

## Core Skills

{{#each coreSkills}}
- {{this}}
{{/each}}
`;
}
function generateReadmeInstallation() {
    return `## Installation

\`\`\`bash
# Install dependencies
bun install

# Build the agent
bun run build

# Start development
bun run dev
\`\`\`
`;
}
function generateReadmeUsage() {
    return `## Usage

### Development Mode

\`\`\`bash
# Start the agent in development mode
bun run dev
\`\`\`

### Testing

\`\`\`bash
# Run all tests
bun test

# Run tests in watch mode
bun test --watch

# Run specific test files
bun test tests/unit/services.test.ts
\`\`\`

### Linting and Formatting

\`\`\`bash
# Lint code
bun run lint

# Fix linting issues
bun run lint:fix

# Format code
bun run format

# Check formatting
bun run format:check
\`\`\`
`;
}
function generateReadmeMcpSection() {
    return `## MCP Server Integration

This agent includes an MCP (Model Context Protocol) server for seamless integration with Claude Code:

- **Server Configuration**: \`src/mcp-server/config.json\`
- **Main Server**: \`src/mcp-server/index.ts\`
- **Tool Definitions**: \`src/mcp-server/tools/\`
- **Event Handlers**: \`src/mcp-server/handlers/\`

### MCP Tools

The agent provides the following MCP tools:

{{#each coreSkills}}
- {{this}} related tools
{{/each}}
`;
}
function generateReadmeConfiguration() {
    return `## Configuration

### Environment Variables

Create a \`.env\` file in the root directory:

\`\`\`env
# Agent Configuration
AGENT_ID={{agentId}}
AGENT_NAME={{agentName}}
AGENT_VERSION={{version}}

# Development Configuration
NODE_ENV=development
LOG_LEVEL=debug
\`\`\`

### Customization

You can customize the agent behavior by modifying:

- \`src/config/\` - Configuration files
- \`src/services/\` - Core service implementations
- \`src/utils/\` - Utility functions
`;
}
function generateReadmeProjectStructure() {
    return `## Project Structure

\`\`\`
├── src/
│   ├── index.ts              # Main agent entry point
│   ├── types/                # TypeScript type definitions
│   ├── services/             # Core service implementations
│   ├── utils/                # Utility functions
│   └── mcp-server/           # MCP server implementation
│       ├── index.ts          # MCP server main file
│       ├── config.json       # MCP server configuration
│       ├── tools/            # MCP tool definitions
│       └── handlers/         # Event handlers
├── tests/
│   ├── unit/                 # Unit tests
│   ├── integration/          # Integration tests
│   └── e2e/                  # End-to-end tests
├── config/                   # Configuration files
├── docs/                     # Documentation
├── scripts/                  # Setup and utility scripts
└── package.json              # Package configuration
\`\`\`
`;
}
function generateReadmeDevelopment() {
    return `## Development

### Setting Up Development Environment

\`\`\`bash
# Run the setup script
chmod +x scripts/setup.sh
./scripts/setup.sh
\`\`\`

### Making Changes

1. Make your changes to the source code
2. Run tests: \`bun test\`
3. Check linting: \`bun run lint\`
4. Format code: \`bun run format\`
5. Build: \`bun run build\`
`;
}
function generateReadmeFooter() {
    return `## Contributing

1. Fork the repository
2. Create a feature branch
3. Make your changes
4. Add tests for new functionality
5. Ensure all tests pass
6. Submit a pull request

## License

MIT License - see LICENSE file for details

## Support

For support and questions:

- Create an issue in the repository
- Check the documentation in \`docs/\`
- Review the test files for usage examples

---

Generated by Agent Creator - {{date}}
Author: {{author}}
Version: {{version}}
`;
}
export function generateReadmeTemplate() {
    return [
        generateReadmeHeader(),
        generateReadmeInstallation(),
        generateReadmeUsage(),
        generateReadmeMcpSection(),
        generateReadmeConfiguration(),
        generateReadmeProjectStructure(),
        generateReadmeDevelopment(),
        generateReadmeFooter(),
    ].join('\n');
}
//# sourceMappingURL=readme.template.js.map